All for max 300, 200, 100, 50, 20, and 10 generations (fitness threshold: 5000, max score: 400 - at this point it can be assumed that it will go forever)

Maybe it would be good to train a model on big gaps with static pipes (it should take like 4 generations probably)
Then take this genome and train it on smaller gaps (maybe it won't take long)
And then take this genome and train it on smaller gaps + moving pipes (and compare what takes long - this iterative approach to learning or deep dive to the hardest difficulty from the start)

Environments to train in:

1. NEAT - Random map every time
2. NEAT - The same map every time
3. NEAT - The same map every time with repeating difficult sections after 3 failed encounters in the same point on the map
4. NEAT - Test with 1 - 10 and 15 neurons in the hidden layer (Done)
5. Deep Q-Learning - The same map every time
6. Deep Q-Learning - The same map every time with repeating difficult sections after 3 failed encounters in the same point on the map

Regarding the repeats - maybe a good strategy would be to not reset fitness of the genomes back to 0 when repeating the difficult sections, but scale it down a bit (so still the best genome is the one that got the highest previously)

Tests to make:

1. Compare for different versions of the game
  - Static pipes, big gap (GAP: 300)
  - Static pipes, small gap (GAP: 220)
  - Moving pipes, big gap (GAP: 300)
  - Moving pipes, small gap (GAP: 220)

(theoretically the game can be sped up as another measure of difficulty and it would create 4 more combinations to compare the genomes in [it would be 8 in total then])
